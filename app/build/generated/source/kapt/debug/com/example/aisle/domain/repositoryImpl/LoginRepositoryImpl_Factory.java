// Generated by Dagger (https://dagger.dev).
package com.example.aisle.domain.repositoryImpl;

import com.example.aisle.data.repository.dataSource.LoginRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginRepositoryImpl_Factory implements Factory<LoginRepositoryImpl> {
  private final Provider<LoginRemoteDataSource> loginRemoteDataSourceProvider;

  public LoginRepositoryImpl_Factory(
      Provider<LoginRemoteDataSource> loginRemoteDataSourceProvider) {
    this.loginRemoteDataSourceProvider = loginRemoteDataSourceProvider;
  }

  @Override
  public LoginRepositoryImpl get() {
    return newInstance(loginRemoteDataSourceProvider.get());
  }

  public static LoginRepositoryImpl_Factory create(
      Provider<LoginRemoteDataSource> loginRemoteDataSourceProvider) {
    return new LoginRepositoryImpl_Factory(loginRemoteDataSourceProvider);
  }

  public static LoginRepositoryImpl newInstance(LoginRemoteDataSource loginRemoteDataSource) {
    return new LoginRepositoryImpl(loginRemoteDataSource);
  }
}
