// Generated by Dagger (https://dagger.dev).
package com.example.aisle.domain.repositoryImpl;

import com.example.aisle.data.repository.dataSource.OtpRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OtpRepositoryImpl_Factory implements Factory<OtpRepositoryImpl> {
  private final Provider<OtpRemoteDataSource> otpRemoteDataSourceProvider;

  public OtpRepositoryImpl_Factory(Provider<OtpRemoteDataSource> otpRemoteDataSourceProvider) {
    this.otpRemoteDataSourceProvider = otpRemoteDataSourceProvider;
  }

  @Override
  public OtpRepositoryImpl get() {
    return newInstance(otpRemoteDataSourceProvider.get());
  }

  public static OtpRepositoryImpl_Factory create(
      Provider<OtpRemoteDataSource> otpRemoteDataSourceProvider) {
    return new OtpRepositoryImpl_Factory(otpRemoteDataSourceProvider);
  }

  public static OtpRepositoryImpl newInstance(OtpRemoteDataSource otpRemoteDataSource) {
    return new OtpRepositoryImpl(otpRemoteDataSource);
  }
}
