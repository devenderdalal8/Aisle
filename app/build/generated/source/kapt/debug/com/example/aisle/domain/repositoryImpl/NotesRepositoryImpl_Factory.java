// Generated by Dagger (https://dagger.dev).
package com.example.aisle.domain.repositoryImpl;

import com.example.aisle.data.repository.dataSource.NotesRemoteDataSource;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NotesRepositoryImpl_Factory implements Factory<NotesRepositoryImpl> {
  private final Provider<NotesRemoteDataSource> notesRemoteDataSourceProvider;

  public NotesRepositoryImpl_Factory(
      Provider<NotesRemoteDataSource> notesRemoteDataSourceProvider) {
    this.notesRemoteDataSourceProvider = notesRemoteDataSourceProvider;
  }

  @Override
  public NotesRepositoryImpl get() {
    return newInstance(notesRemoteDataSourceProvider.get());
  }

  public static NotesRepositoryImpl_Factory create(
      Provider<NotesRemoteDataSource> notesRemoteDataSourceProvider) {
    return new NotesRepositoryImpl_Factory(notesRemoteDataSourceProvider);
  }

  public static NotesRepositoryImpl newInstance(NotesRemoteDataSource notesRemoteDataSource) {
    return new NotesRepositoryImpl(notesRemoteDataSource);
  }
}
